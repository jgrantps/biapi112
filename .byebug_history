c
update_params
params
c
serialized_comments
c
serialized_comments
c
serialized_comments
c
serialized_comments
c
serialized_comments
c
serialized_comments
updated_comments.each {|comment|serialized_comments.push(CommentSerializer.new(comment, options))}
updated_comments
public_selections
update_params
c
exit
c
update_params
updated_comments
c
updated_comments
c
serialized_comments
c
updated_selections
c
updated_selections
c
update_params
c
params
update_params
c
params
update_params
c
params[:currentSet]
params
c
params
c
params
c
params
c
selection_payload
selection.payload
c
selection_payload
c
selection_payload
selection_payload.public_users
selection_payload
c
User.all
User.public_users
c
public_users
c
User.all.select {|i| (i.selections.include? scelection.public==true}
User.all.select {|i| (i.selections.include? public_selections)==true}
User.all.select {|i| i.selections.include? public_selections}
public_selections
public_selection
a
a = User.all.select {|user| user.selections.include? public_selections}
bb.comments
bb = User.first
User.all
public_users
c
a.kit
a = Selection.last
c
aa.length
aa = public_selections.filter {|i| !i.comments.empty? }
public_selections.with_comments
public_selections.length
public_selections
selection.comments
selection_payload
comments
c
bb = Selection.all.are_public.with_comments.length
bb = Selection.all.are_public.with_comments
bb = Selection.all.are_public.length
bb = Selection.all.are_public
c
selection_payload.empty?
c
serialized_package
selection_payload
c
params.permit(:id)
params.require(:id)
params
c
selection
selection.save
selection.kit
selection.kit = selected_kit
selection
selected_kit.save
selected_kit.theme = selection_theme
selected_kit.theme
selected_kit.thme
selected_kit
selection_theme
selected_kit.save!
selected_kit
selection_kit_params
selection
c
cc.comments.length
cc.comments
cc = bb.selections.first
bb.selections.first
bb.selections.length
bb.selections
bb = Kit.first
Kit.first
bb.selections.length
bb.selections
bb = Kit.find_by(:set_num => "75952-1")
Kit.find_by(:set_num => "75952-1")
Kit.all
found_kit
selected_kit.selections
selected_kit
c
allowpublic
allowPublic
 allowpublic = (selection_permission_params[:isPublic] == "true" ? true : false)
selection_permission_params[:isPublic]
dd.kits.length
dd.kits
dd
dd.selections
dd = Theme.find_by(:api_id => '667')
Theme.find_by(:api_id => '667')
Theme[2]
Theme.first
Theme.firs
ccc.kits.length
ccc.kits
ccc.selections
ccc = Theme.last
ccc Theme.last
Theme.last
!!cc
cc
cc = Kit.find_by(:set_num => 'abe')
cc = Kit.find_by(:set_num => selection_kit_params[:set_num])
cc = Kit.find_by(:set_num => selection_kit_params[:set_num]
selection_kit_params[:set_num]
selection_kit_params
c
params
c
serialized_package
c
b = json: serialized_package
serialized_package
c
collection
collection.length
c
collection.length
collection
serialized_package
byebug
c
comment
c
commentParams[:comment]
commentParams[comment]
commentParams
c
params
c
params
c
params
c
serialized_package
c
serialized_package
c
bb = SelectionSerializer.new(collection.last, options)
c
bb = SelectionSerializer.new(collection.first, options)
bb
bb = SelectionSerializer.new(collection.first, options)
options
collection.first
collection
c
serialized_package.empty?
c
current_user.selections
current_user.Selection
current_user.Selections
current_user
Selection.all
collection
collection = Selection.specific_to(current_user)
c
selection
c
selection
c
selected_kit.save!
selected_kit
c
selected_kit
c
selection_theme
selected_kit
selection
c
selection
selection_theme_params
selected_kit.theme
selected_kit
selection
c
selection_theme
selected_kit.save!
selected_kit
selection
c
new_kit
new_selection
selection_theme
c
selection_theme
new_kit
c
params
new_kit.save!
new_kit
c
selected_kit.save!
selected_kit
selected_kit = Kit.find_or_create_by(selection_kit_params)
selected_kit
selection
c
allowpublic
c
selection_permission_params[:isPublic]
